name: CI

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  test-build-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm install

      - name: Start Redis
        run: docker run -d --name redis-for-tests -p 6379:6379 redis

      - name: Run tests
        run: npm run test:ci

      - name: Stop Redis
        run: docker stop redis-for-tests && docker rm redis-for-tests
      
      - name: Determine version bump
        id: version_bump
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
      
          # Determine if there are any commit messages that indicate a major or minor bump
          first_line=$(git log -1 --pretty=%B)

          if [[ "$first_line" =~ ^BREAKING\ CHANGE: ]]; then
            BUMP="major"
          elif [[ "$first_line" =~ ^feat:|^hotfix: ]]; then
            BUMP="minor"
          elif [[ "$first_line" =~ ^hotfix:|^fix:|^docs:|^ref:|^perf:|^chore: ]]; then
            BUMP="patch"
          else
            BUMP="patch"
          fi

          # Bump the version using npm version
          NEW_VERSION=$(npm version $BUMP --no-git-tag-version)
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          echo "bump_type=$BUMP" >> $GITHUB_OUTPUT
          echo "Determined bump type: $BUMP"
      
      - name: Commit and push version bump
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          NEW_VERSION=v1.0.0
          BUMP_TYPE=patch
          
          # Determine the commit message based on whether it's a breaking change or not
          if [[ "$first_line" =~ ^BREAKING\ CHANGE: ]]; then
            COMMIT_MESSAGE="BREAKING CHANGE: Bump version to $NEW_VERSION"
          else
            COMMIT_MESSAGE="chore($BUMP_TYPE): Bump version to $NEW_VERSION"
          fi
          
          # Commit the changes
          git commit -am "$COMMIT_MESSAGE"
          git push origin main

      - name: Publish to npm (only for major/minor bumps)
        if: steps.version_bump.outputs.bump_type == 'minor' || steps.version_bump.outputs.bump_type == 'major'
        run: npm run build && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}